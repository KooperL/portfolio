import { fetchProperty } from "@containers/App/api/propertyApi"
import { SchemeContext } from "@containers/context/colourScheme"
import { PropertyPayload, PropertyPOST, PropertySearchPayload } from "@containers/propertyPage/types"
import { useContext, useEffect, useRef } from "react"
import { useFetch } from "src/hooks/useFetch"
import { useSubmit } from "src/hooks/useSubmit"

function usePropertyState() {
  const ref = useRef()
  const [scheme, setScheme] = useContext(SchemeContext)
  const { state: statePull, pull } = useFetch<PropertyPayload, undefined>(fetchProperty)
  const { state: stateSubmit, handleSubmit } = useSubmit(fetchPropertySearch)

  useEffect(() => {
    pull()
    document.title = `Property | ${scheme.title}`
  }, [])

  return {
    statePull,
    scheme,
    ref,
    stateSubmit,
    handleSubmit
  }
}

export default usePropertyState
