{"message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":5055,"byte_end":5076,"line_start":178,"line_end":178,"column_start":68,"column_end":89,"is_primary":false,"text":[{"text":"    let hNucleationRegions = find_nucleation_region(hPropensities, alpha_helix_threshold, alpha_helix_sliding_window, alpha_helix_contiguous_window, alpha_helix_error);","highlight_start":68,"highlight_end":89}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5106,"byte_end":5135,"line_start":178,"line_end":178,"column_start":119,"column_end":148,"is_primary":false,"text":[{"text":"    let hNucleationRegions = find_nucleation_region(hPropensities, alpha_helix_threshold, alpha_helix_sliding_window, alpha_helix_contiguous_window, alpha_helix_error);","highlight_start":119,"highlight_end":148}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5137,"byte_end":5154,"line_start":178,"line_end":178,"column_start":150,"column_end":167,"is_primary":false,"text":[{"text":"    let hNucleationRegions = find_nucleation_region(hPropensities, alpha_helix_threshold, alpha_helix_sliding_window, alpha_helix_contiguous_window, alpha_helix_error);","highlight_start":150,"highlight_end":167}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5017,"byte_end":5039,"line_start":178,"line_end":178,"column_start":30,"column_end":52,"is_primary":true,"text":[{"text":"    let hNucleationRegions = find_nucleation_region(hPropensities, alpha_helix_threshold, alpha_helix_sliding_window, alpha_helix_contiguous_window, alpha_helix_error);","highlight_start":30,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1818,"byte_end":1831,"line_start":89,"line_end":89,"column_start":27,"column_end":40,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":27,"highlight_end":40}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1833,"byte_end":1849,"line_start":89,"line_end":89,"column_start":42,"column_end":58,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":42,"highlight_end":58}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1851,"byte_end":1872,"line_start":89,"line_end":89,"column_start":60,"column_end":81,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":60,"highlight_end":81}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1874,"byte_end":1898,"line_start":89,"line_end":89,"column_start":83,"column_end":107,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":83,"highlight_end":107}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1900,"byte_end":1913,"line_start":89,"line_end":89,"column_start":109,"column_end":122,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":109,"highlight_end":122}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1795,"byte_end":1817,"line_start":89,"line_end":89,"column_start":4,"column_end":26,"is_primary":true,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":4,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:178:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m178\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m = find_nucleation_region(hPropensities, alpha_helix_threshold, alpha_helix_sliding_window, alpha_helix_contiguous_window, alpha_helix_erro\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:89:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\n"}
{"message":"arguments to this function are incorrect","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":5224,"byte_end":5244,"line_start":179,"line_end":179,"column_start":68,"column_end":88,"is_primary":false,"text":[{"text":"    let eNucleationRegions = find_nucleation_region(ePropensities, beta_sheet_threshold, beta_sheet_sliding_window, beta_sheet_contiguous_window, beta_sheet_error);","highlight_start":68,"highlight_end":88}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5273,"byte_end":5301,"line_start":179,"line_end":179,"column_start":117,"column_end":145,"is_primary":false,"text":[{"text":"    let eNucleationRegions = find_nucleation_region(ePropensities, beta_sheet_threshold, beta_sheet_sliding_window, beta_sheet_contiguous_window, beta_sheet_error);","highlight_start":117,"highlight_end":145}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5303,"byte_end":5319,"line_start":179,"line_end":179,"column_start":147,"column_end":163,"is_primary":false,"text":[{"text":"    let eNucleationRegions = find_nucleation_region(ePropensities, beta_sheet_threshold, beta_sheet_sliding_window, beta_sheet_contiguous_window, beta_sheet_error);","highlight_start":147,"highlight_end":163}],"label":"expected `usize`, found floating-point number","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":5186,"byte_end":5208,"line_start":179,"line_end":179,"column_start":30,"column_end":52,"is_primary":true,"text":[{"text":"    let eNucleationRegions = find_nucleation_region(ePropensities, beta_sheet_threshold, beta_sheet_sliding_window, beta_sheet_contiguous_window, beta_sheet_error);","highlight_start":30,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"src/main.rs","byte_start":1818,"byte_end":1831,"line_start":89,"line_end":89,"column_start":27,"column_end":40,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":27,"highlight_end":40}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1833,"byte_end":1849,"line_start":89,"line_end":89,"column_start":42,"column_end":58,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":42,"highlight_end":58}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1851,"byte_end":1872,"line_start":89,"line_end":89,"column_start":60,"column_end":81,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":60,"highlight_end":81}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1874,"byte_end":1898,"line_start":89,"line_end":89,"column_start":83,"column_end":107,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":83,"highlight_end":107}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1900,"byte_end":1913,"line_start":89,"line_end":89,"column_start":109,"column_end":122,"is_primary":false,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":109,"highlight_end":122}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":1795,"byte_end":1817,"line_start":89,"line_end":89,"column_start":4,"column_end":26,"is_primary":true,"text":[{"text":"fn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {","highlight_start":4,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: arguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:179:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m179\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m = find_nucleation_region(ePropensities, beta_sheet_threshold, beta_sheet_sliding_window, beta_sheet_contiguous_window, beta_sheet_erro\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--------------------\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mexpected `usize`, found floating-point number\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:89:4\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m89\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn find_nucleation_region(arr: Vec<f32>, threshold: usize, sliding_window: usize, contiguous_window: usize, sError: usize) -> Vec<bool> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------------\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}
